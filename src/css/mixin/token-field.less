/*
 * Copyright (C) 2023 Jukka Svahn
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * Token field.
 *
 * [1] Uses important in the default styles.
 */
#mixin {
  .token-field() {
    max-width: 100%;

    svg {
      display: none;
    }

    > label {
      > div {
        background: transparent;
        border: 0;
        border-radius: 0;
        color: inherit;
        display: flex;
        align-items: center;
        flex-wrap: nowrap;
        font: inherit;
        justify-content: space-between;
        min-height: 0;
        position: relative;

        > div {
          align-items: center;
          background: var(--input-bg-color);
          border: 1px solid var(--input-border-color);
          border-radius: var(--border-radius-m);
          display: flex;
          flex-direction: row;
          flex-grow: 1;
          flex-wrap: wrap;
          gap: var(--padding-xxxs);
          justify-content: flex-start;
          overflow: hidden;
          padding: var(--padding-xs);

          > div:last-child {
            align-items: center;
            display: flex;
            flex-wrap: nowrap;
            justify-content: space-between;
            min-height: calc(var(--icon-size) + var(--padding-xxxs) + var(--padding-xxxs));
            width: 100%;

            > input {
              font: inherit;
              line-height: inherit;
              margin: calc(-1 * var(--padding-xs));
              min-width: 0;
              padding: var(--padding-xs) calc(var(--icon-size) + var(--padding-xs)) var(--padding-xs) var(--padding-xs);
              width: calc(100% + var(--padding-xs) + var(--padding-xs));
            }
          }
        }

        ul {
          background: transparent;
          border: none;
          border-radius: var(--border-radius-s);
          bottom: auto;
          box-shadow: none;
          color: var(--autocomplete-item-text-color);
          font: inherit;
          left: 0;
          list-style: none;
          max-height: 10rem;
          overflow: hidden;
          overflow-y: auto;
          position: absolute;
          right: 0;
          top: calc(100% + var(--padding-xxs));
          width: 100%;

          li {
            background: var(--autocomplete-bg-color);
            border-left: 1px solid var(--autocomplete-border-color);
            border-radius: 0;
            border-right: 1px solid var(--autocomplete-border-color);
            border-top: 1px solid var(--autocomplete-item-separator-color);
            color: inherit;
            cursor: pointer;
            display: block;
            font: inherit;
            overflow: hidden;
            padding: var(--padding-xs) var(--padding-m);
            text-overflow: ellipsis;
            white-space: nowrap;

            &:first-child {
              border-top: 1px solid var(--autocomplete-border-color);
              border-top-left-radius: var(--border-radius-s);
              border-top-right-radius: var(--border-radius-s);
            }

            &:last-child {
              border-bottom: 1px solid var(--autocomplete-border-color);
              border-bottom-left-radius: var(--border-radius-m);
              border-bottom-right-radius: var(--border-radius-m);
            }

            &:hover {
              background: var(--autocomplete-item-bg-color-hover);
              color: var(--autocomplete-item-text-color-hover);

              &:not(:last-child) {
                border-bottom-color: transparent;
              }

              + li {
                border-top-color: transparent;
              }
            }
          }
        }
      }
    }

    .token {
      align-items: center;
      background: var(--input-border-color) !important; // [1]
      border: none;
      border-radius: var(--border-radius-s);
      color: inherit;
      display: flex;
      flex-wrap: nowrap;
      font: inherit;
      gap: var(--margin-xs);
      line-height: inherit;
      margin: 0;
      max-width: 100%;
      padding: var(--padding-xxxs) var(--padding-xs);

      .token-remove {
        #mixin.icon(
          var(--icon-delete-left),
          var(--icon-delete-left-active)
        );
        order: 2;
      }

      span {
        margin: 0;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }

    .remove-all {
      #mixin.icon(
        var(--icon-delete-left),
        var(--icon-delete-left-active)
      );
      cursor: pointer;
      margin: 0 0 0 calc(-1 * var(--icon-size));

      &.hidden {
        display: none;
      }
    }
  }
}
